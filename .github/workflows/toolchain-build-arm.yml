name: ARM GCC+LLD Build

on:
  push:
  schedule:
    - cron: '0 0 * * 0,4'

jobs:
  build:
    runs-on: ubuntu-20.04
    container:
      image: archlinux:base-devel
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        pacman -Syu --needed --noconfirm base base-devel clang cmake git libc++ lld lldb ninja
    - name: Set build date
      id: get-date
      run: |
        sudo timedatectl set-timezone Asia/Kolkata
        echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
    - name: Build & Push
      run: |
        git config --global user.name "${GITHUB_USER}"
        git config --global user.email "${GITHUB_EMAIL}"
        git clone https://"${GITHUB_USER}":"${GITHUB_TOKEN}"@github.com/mvaisakh/gcc-arm ../gcc-arm -b gcc-new
        rm -rf ../gcc-arm/*
        chmod a+x build-*.sh
        ./build-gcc.sh -a arm
        ./build-lld.sh -a arm
        cd ../gcc-arm
        ./bin/arm-eabi-gcc -v 2>&1 | tee /tmp/gcc-arm-version
        ./bin/arm-eabi-ld.lld -v 2>&1 | tee /tmp/lld-arm-version
        git add . -f
        git commit -as -m "Import ARM GCC ${{ steps.get-date.outputs.date }}" -m "Build completed on: $(/bin/date)" -m "Configuration: $(/bin/cat /tmp/gcc-arm-version)" -m "LLD: $(/bin/cat /tmp/lld-arm-version)"
        git gc
        git push origin gcc-new -f
      env:
        GITHUB_EMAIL: ${{ secrets.EMAIL }}
        GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
        GITHUB_USER: ${{ secrets.USERNAME }}
    - uses: yanzay/notify-telegram@v0.1.0
      if: always()
      with:
        chat: ${{ secrets.CHAT }} # user id or channel name secret
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }} # token secret
        status: ${{ job.status }} # do not modify this line